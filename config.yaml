mysqlRemote:
  user: root
  password: wenqiang
  host: 101.133.169.145
  port: 3306
  database: Blog

mysqlLocal:
  user: root
  password:
  host: 127.0.0.1
  port: 3306
  database: Blog

#fabric config
version: 1.0.0

client:
  organization: org1

  logging:
    level: info

  cryptoconfig:
    path: cryptoconfig

channels:
  # multi-org test channel
  mychannel:
    peers:
      peer0.org1.example.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true

      peer0.org2.example.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true

    policies:
      queryChannelConfig:
        minResponses: 1
        maxTargets: 1
        retryOpts:
          attempts: 5
          initialBackoff: 500ms
          maxBackoff: 5s
          backoffFactor: 2.0
#
# list of participating organizations in this network
#
organizations:
  org1:
    mspid: Org1MSP

    # This org's MSP store (absolute path or relative to client.cryptoconfig)
    cryptoPath: cryptoconfig\peerOrganizations\org1.example.com\users\User1@org1.example.com\msp

    peers:
      - peer0.org1.example.com
    Admin:
      cert:
        path: cryptoconfig\peerOrganizations\org1.example.com\users\Admin@org1.example.com\msp\signcerts\Admin@org1.example.com-cert.pem
      User1:
        cert:
          path: cryptoconfig\peerOrganizations\org1.example.com\users\User1@org1.example.com\msp\signcerts\User1@org1.example.com-cert.pem

  org2:
    mspid: Org2MSP

    # This org's MSP store (absolute path or relative to client.cryptoconfig)
    cryptoPath: cryptoconfig\peerOrganizations\org2.example.com\users\User1@org2.example.com\msp

    peers:
      - peer0.org2.example.com
    users:
      Admin:
        cert:
          path: cryptoconfig\peerOrganizations\org2.example.com\users\Admin@org2.example.com\msp\signcerts\Admin@org2.example.com-cert.pem
      User1:
        cert:
          path: cryptoconfig\peerOrganizations\org2.example.com\users\User1@org2.example.com\msp\signcerts\User1@org2.example.com-cert.pem

  # Orderer Org name
  ordererorg:
    # Membership Service Provider ID for this organization
    mspID: OrdererMSP

    # Needed to load users crypto keys and certs for this org (absolute path or relative to global crypto path, DEV mode)
    cryptoPath: cryptoconfig\ordererOrganizations\example.com\users\Admin@example.com\msp

orderers:
  orderer.example.com:
    # [Optional] Default: Infer from hostname
    url: 101.133.169.145:7050 #orderer.example.com:7050

    grpcOptions:
      ssl-target-name-override: orderer.example.com
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: cryptoconfig\ordererOrganizations\example.com\tlsca\tlsca.example.com-cert.pem

peers:
  peer0.org1.example.com:
    # this URL is used to send endorsement and query requests
    # [Optional] Default: Infer from hostname
    url: 101.133.169.145:7051 #peer0.org1.example.com:7051
    grpcOptions:
      ssl-target-name-override: peer0.org1.example.com
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false
    #grpcOptions:
    #  ssl-target-name-override: peer0.org1.example.com

    tlsCACerts:
      # Certificate location absolute path
      path: cryptoconfig\peerOrganizations\org1.example.com\tlsca\tlsca.org1.example.com-cert.pem

  peer0.org2.example.com:
    url: 101.133.169.145:9051 #peer0.org2.example.com:9051
    #grpcOptions:
    #  ssl-target-name-override: peer0.org2.example.com
    grpcOptions:
      ssl-target-name-override: peer0.org2.example.com
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false
    tlsCACerts:
      path: cryptoconfig\peerOrganizations\org2.example.com\tlsca\tlsca.org2.example.com-cert.pem
